version: '3.8'

services:
  backend:
    # Utilisation du nom d'utilisateur correct (wael883)
    image: ${DOCKERHUB_USERNAME:-wael883}/stage-backend:latest
    # build:
    #   context: ./backendd
    #   dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      HOST: 0.0.0.0
      
      # Configuration pour PostgreSQL local
      # Configuration pour la base principale (techno1)
      DB_HOST: technomaster.cluster-cmb4eeaw4r2x.us-east-1.rds.amazonaws.com
      DB_USER: postgres
      DB_PASSWORD: Azazaz123!  # Remplacez par votre mot de passe PostgreSQL local
      DB_PORT: 5432
      #SSL_ENABLED: "false"
      
      # Configuration pour la base secondaire (techno2)
      DB2_HOST: technomaster.cluster-cmb4eeaw4r2x.us-east-1.rds.amazonaws.com
      DB2_USER: postgres
      DB2_PASSWORD: Azazaz123!  # Remplacez par votre mot de passe PostgreSQL local
      DB2_PORT: 5432
      
      # Nom des bases de données locales
      DB_NAME: techno1  # Nom de votre première base de données locale
      DB2_NAME: techno2  # Nom de votre deuxième base de données locale
      
      # Configuration pour auth dans Aurora
      AUTH_DB_HOST: host.docker.internal
      AUTH_DB_USER: postgres
      AUTH_DB_PASSWORD: azazaz
      AUTH_DB_PORT: 5432
      AUTH_DB_NAME: auth
      
    volumes:
      - ./backendd:/usr/src/app
      - /usr/src/app/node_modules
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    depends_on:
      - frontend
    networks:
      - app-network

  frontend:
    # Utilisation du nom d'utilisateur correct (wael883)
    image: ${DOCKERHUB_USERNAME:-wael883}/stage-frontend:latest
    # build:
    #   context: ./TechnoMstr
    #   dockerfile: Dockerfile
    ports:
      - "80:80"
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge